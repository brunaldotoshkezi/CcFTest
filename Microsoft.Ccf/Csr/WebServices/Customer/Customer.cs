//===================================================================================
// Microsoft Product – subject to the terms of the Microsoft EULA and other agreements
//
// Customer Care Framework
// copyright 2003-2006 Microsoft Corp.
//
// CCF web service for customer information.
//
//===================================================================================
using System.ComponentModel;
using Microsoft.Ccf.Csr.WebServices.Customer.Provider;
using System.ServiceModel;
using System.ServiceModel.Activation;

namespace Microsoft.Ccf.Csr.WebServices.Customer
{
	/// <summary>
	/// Customer information used by CCF.
	/// </summary>
	[ServiceContract(Namespace = "http://microsoft.com/ccf/customer")]
	[AspNetCompatibilityRequirements(RequirementsMode = AspNetCompatibilityRequirementsMode.Allowed)]
	public class Customer 
	{
		// The singleton instance of the provider.
		static private CustomerProvider _provider = CustomerProvider.Instance();

		/// <summary>
		/// Retrieve a customer record based on the customer ID.
		/// </summary>
		/// <param name="customerID">ID of the customer whose information to retrieve.</param>
		[OperationContract]
		public CustomerProvider.CustomerRecord GetCustomerByID(string customerID)
		{
			return _provider.GetCustomerByID(customerID);
		}

		/// <summary>
		/// Retrieve a customer record based on the customer Guid.
		/// </summary>
		/// <param name="customerGuid">Guid of the customer whose information to retrieve.</param>
		[OperationContract]
		public CustomerProvider.CustomerRecord GetCustomerByGuid(string customerGuid)
		{
			return _provider.GetCustomerByGuid(customerGuid);
		}

		/// <summary>
		/// Retrieve a customer record based on the customer's email address.
		/// </summary>
		/// <param name="customerEmail">Email address of the customer whose information to retrieve.</param>
		[OperationContract]
		public CustomerProvider.CustomerRecord GetCustomerByEmail(string customerEmail)
		{
			return _provider.GetCustomerByEmail(customerEmail);
		}

		/// <summary>
		/// Retrieve a set of customer records that this particular email (identify by an ID) belongs to.
		/// Only 'maxRecords' number of customers are returned.
		/// </summary>
		/// <param name="emailID">The ID generated by some system for an email</param>
		/// <param name="maxRecords">Maximum number of records to retrieve.</param>
		[OperationContract]
		public CustomerProvider.CustomerRecord[] GetCustomersByEmailID(string emailID, int maxRecords)
		{
			return _provider.GetCustomersByEmailID(emailID, maxRecords);
		}

		/// <summary>
		/// Retrieve a set of customer records that match the given customer name.  Only
		/// 'maxRecords' number of customers are returned.
		/// </summary>
		/// <param name="first">Customer's first name.</param>
		/// <param name="last">Customer's last name.</param>
		/// <param name="maxRecords">Maximum number of records to retrieve.</param>
		[OperationContract]
		public CustomerProvider.CustomerRecord[] GetCustomersByName(string first, string last, int maxRecords)
		{
			return _provider.GetCustomersByName(first, last, maxRecords);
		}

		/// <summary>
		/// Return a set of customers who have a phone number matching the
		/// given 'ANI' (Automatic Number ID).  The max number of returned records
		/// is set by maxRecords.
		/// </summary>
		/// <param name="ani">ANI to search upon.</param>
		/// <param name="maxRecords">Maximum number of records to retrieve.</param>
		[OperationContract]
		public CustomerProvider.CustomerRecord[] GetCustomersByANI(string ani, int maxRecords)
		{
			return _provider.GetCustomersByANI(ani, maxRecords);
		}

		/// <summary>
		/// Save the customer information through the service.
		/// </summary>
		/// <param name="custRec">Customer record containing information to save.</param>
		[OperationContract]
		public void SetCustomer(CustomerProvider.CustomerRecord custRec)
		{
			_provider.SetCustomer(custRec);
		}
	}
}